{"ast":null,"code":"var _jsxFileName = \"D:\\\\todoapp1\\\\Advanced-Task-management-Full-stack-application\\\\Frontend\\\\src\\\\Tasklist\\\\CompletedTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport { format } from 'date-fns';\nimport ConfirmStatus from './StatusconfirmedDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompletedTask = ({\n  completetasklist,\n  completelistres\n}) => {\n  _s();\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return format(date, 'dd MMMM yyyy h:mma');\n  };\n  const [openconfirm, setConfirm] = useState(false);\n  const [data, setData] = useState(Object);\n  const openStatusConfirm = task => {\n    setData(task);\n    setConfirm(true);\n  };\n  const StatusConfirmed = confirm => {\n    setConfirm(false);\n    if (confirm) {\n      completelistres(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      'height': \"300px\",\n      'overflow': \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Completed Task List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-responsive\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: completetasklist.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: task.isCompleted == 1,\n              onClick: () => openStatusConfirm(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(task.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmStatus, {\n      open: openconfirm,\n      message: 'Are you sure you want to continue with this task?',\n      dialogconfirm: StatusConfirmed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CompletedTask, \"PTNDaPogjY66/Y9kv1zoVDfUNlY=\");\n_c = CompletedTask;\nexport default CompletedTask;\nvar _c;\n$RefreshReg$(_c, \"CompletedTask\");","map":{"version":3,"names":["React","useState","Checkbox","format","ConfirmStatus","jsxDEV","_jsxDEV","CompletedTask","completetasklist","completelistres","_s","formatDate","dateString","date","Date","openconfirm","setConfirm","data","setData","Object","openStatusConfirm","task","StatusConfirmed","confirm","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","checked","isCompleted","onClick","title","description","created_at","open","message","dialogconfirm","_c","$RefreshReg$"],"sources":["D:/todoapp1/Advanced-Task-management-Full-stack-application/Frontend/src/Tasklist/CompletedTask.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { format } from 'date-fns';\r\nimport ConfirmStatus from './StatusconfirmedDialog';\r\n\r\nconst CompletedTask=({completetasklist,completelistres})=>{\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return format(date, 'dd MMMM yyyy h:mma');\r\n      };\r\n\r\n      const [openconfirm,setConfirm]=useState(false);\r\n      const [data,setData]=useState(Object);\r\n\r\n      const openStatusConfirm=(task)=>{\r\n          setData(task);\r\n          setConfirm(true);\r\n      }\r\n\r\n      const StatusConfirmed=(confirm)=>{\r\n        setConfirm(false)\r\n         if(confirm){\r\n            completelistres(data);\r\n         }\r\n      }\r\n\r\n    return(\r\n        <div style={{'height':\"300px\",'overflow':\"auto\"}}>\r\n            <h5>Completed Task List:</h5>\r\n            <table className='table table-responsive'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Done</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Created At</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                     completetasklist.map((task,index)=>(\r\n                        <tr key={index}>\r\n                        <td>\r\n                            {<Checkbox checked={task.isCompleted==1} onClick={()=> openStatusConfirm(task)} />}\r\n                        </td>\r\n                        <td>{task.title}</td>\r\n                        <td>{task.description}</td>\r\n                        <td>{formatDate(task.created_at)}</td>\r\n                        </tr>\r\n                     ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n            <ConfirmStatus \r\n            open={openconfirm}\r\n            message={'Are you sure you want to continue with this task?'}\r\n            dialogconfirm={StatusConfirmed}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default CompletedTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}