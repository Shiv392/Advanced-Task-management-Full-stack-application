{"ast":null,"code":"var _jsxFileName = \"D:\\\\todoapp1\\\\Advanced-Task-management-Full-stack-application\\\\Frontend\\\\src\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport './Login.css';\nimport { useFormik } from \"formik\";\nimport config from '../config.json';\nimport { Link } from \"react-router-dom\";\nimport { authContext } from \"../Auth/Auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport BackdropComp from \"../Common/Backdrop\";\nimport SnackbarComp from \"../Common/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    isAuthenticated,\n    login,\n    Logout\n  } = useContext(authContext);\n  const navigate = useNavigate();\n  const [openbackdrop, setBackdrop] = useState(false);\n  const [opensnackbar, setSnackbar] = useState({\n    open: false,\n    message: ''\n  });\n  const loginForm = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: async (values, {\n      resetForm\n    }) => {\n      console.log('login form values----->', values);\n      await loginClick(values.email, values.password);\n    }\n  });\n  const loginClick = async (email, password) => {\n    setBackdrop(true);\n    const apibody = {\n      \"email\": email,\n      \"password\": password\n    };\n    const loginres = await axios.post(config.login, apibody);\n    if (loginres.data.success) {\n      loginForm.resetForm();\n      localStorage.setItem('emial', email);\n      localStorage.setItem('token', loginres.data.token);\n      login();\n      navigate('/task');\n    } else {\n      setSnackbar({\n        open: true,\n        message: loginres.data.message\n      });\n      setTimeout(() => {\n        setSnackbar(false);\n      }, 5000);\n    }\n    setBackdrop(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: loginForm.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-title\",\n        children: \"Sign in to your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...loginForm.getFieldProps('email'),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...loginForm.getFieldProps('password'),\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-link\",\n        children: [\"No account?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BackdropComp, {\n      openbackdrop: openbackdrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(SnackbarComp, {\n      vertical: \"top\",\n      horizontal: \"right\",\n      opensnackbar: opensnackbar.open,\n      message: opensnackbar.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"tHDuMQ5Ug850lB+/oI5tXQq8UUc=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useState","useFormik","config","Link","authContext","useNavigate","axios","BackdropComp","SnackbarComp","jsxDEV","_jsxDEV","Login","_s","isAuthenticated","login","Logout","navigate","openbackdrop","setBackdrop","opensnackbar","setSnackbar","open","message","loginForm","initialValues","email","password","onSubmit","values","resetForm","console","log","loginClick","apibody","loginres","post","data","success","localStorage","setItem","token","setTimeout","children","className","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","getFieldProps","placeholder","to","vertical","horizontal","_c","$RefreshReg$"],"sources":["D:/todoapp1/Advanced-Task-management-Full-stack-application/Frontend/src/Login/Login.js"],"sourcesContent":["import React, { useContext,useState } from \"react\";\r\nimport './Login.css';\r\nimport { useFormik } from \"formik\";\r\nimport config from '../config.json';\r\nimport { Link } from \"react-router-dom\";\r\nimport { authContext } from \"../Auth/Auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BackdropComp from \"../Common/Backdrop\";\r\nimport SnackbarComp from \"../Common/Snackbar\";\r\n\r\nconst Login=()=>{\r\n    const {isAuthenticated,login,Logout}=useContext(authContext);\r\n    const navigate=useNavigate();\r\n\r\n    const [openbackdrop,setBackdrop]=useState(false);\r\n    const [opensnackbar,setSnackbar]=useState({open:false,message:''});\r\n\r\n    const loginForm=useFormik({\r\n        initialValues:{\r\n            email:'',\r\n            password:''\r\n        },\r\n        onSubmit: async(values,{resetForm})=>{\r\n            console.log('login form values----->',values);\r\n            await loginClick(values.email,values.password);\r\n        }\r\n    });\r\n\r\n    const loginClick=async(email,password)=>{\r\n          setBackdrop(true);\r\n          const apibody={\r\n            \"email\":email,\"password\":password\r\n          }\r\n           const loginres=await axios.post(config.login,apibody);\r\n           if(loginres.data.success){\r\n            loginForm.resetForm();\r\n            localStorage.setItem('emial',email);\r\n            localStorage.setItem('token',loginres.data.token);\r\n            login();\r\n            navigate('/task')\r\n           }\r\n           else{\r\n            setSnackbar({open:true,message:loginres.data.message});\r\n            setTimeout(() => {\r\n              setSnackbar(false);\r\n            }, (5000));\r\n           } \r\n           setBackdrop(false);       \r\n    }\r\nreturn(\r\n    <div>\r\n    <form className=\"form\" onSubmit={loginForm.handleSubmit}>\r\n       <p className=\"form-title\">Sign in to your account</p>\r\n        <div className=\"input-container\">\r\n          <input type=\"email\" {...loginForm.getFieldProps('email')} placeholder=\"Enter email\" />\r\n          <span>\r\n          </span>\r\n      </div>\r\n      <div className=\"input-container\">\r\n          <input type=\"password\" {...loginForm.getFieldProps('password')} placeholder=\"Enter password\" />\r\n        </div>\r\n         <button type=\"submit\" className=\"submit\">\r\n        Sign in\r\n      </button>\r\n\r\n      <p className=\"signup-link\">\r\n        No account?\r\n        <Link to='signup'>  \r\n        Sign up\r\n        </Link>\r\n      </p>\r\n   </form>\r\n\r\n<BackdropComp openbackdrop={openbackdrop} />\r\n<SnackbarComp \r\nvertical='top' horizontal='right'\r\nopensnackbar={opensnackbar.open}\r\n message={opensnackbar.message}\r\n />\r\n   </div>\r\n)\r\n}\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}